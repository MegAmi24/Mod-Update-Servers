Code "SCD Music Customizer" by "MegAmi"
//
    #lib "HMM"
    #lib "INI"
    #lib "AudioRedirection"

    static bool IsConfigInitialised = false;

    static int TitleMusic = 0;
    static int PPAMusic = 0;
    static int PPCMusic = 0;
    static int PPDMusic = 0;
    static int CCAMusic = 0;
    static int CCCMusic = 0;
    static int CCDMusic = 0;
    static int TTAMusic = 0;
    static int TTCMusic = 0;
    static int TTDMusic = 0;
    static int QQAMusic = 0;
    static int QQCMusic = 0;
    static int QQDMusic = 0;
    static int WWAMusic = 0;
    static int WWCMusic = 0;
    static int WWDMusic = 0;
    static int SSAMusic = 0;
    static int SSCMusic = 0;
    static int SSDMusic = 0;
    static int MMAMusic = 0;
    static int MMCMusic = 0;
    static int MMDMusic = 0;
    static int SpecialMusic = 0;
    static int BossMusic = 0;
    static int FinalFeverMusic = 0;
    static int InvincibleMusic = 0;
    static int SpeedUpMusic = 0;
    static int ZoneClearMusic = 0;
    static int GameOverMusic = 0;
    static int LittlePlanetMusic = 0;
//
{
    if (!IsConfigInitialised)
    {
        var modsQuery = HMM.FindModsByName("SCD Track Customizer");

        if (modsQuery.Count == 1)
        {
            string modConfigIniPath = System.IO.Path.Combine(modsQuery[0].Path, "mod.ini");
            var ini = INI.Read(modConfigIniPath);

            TitleMusic = INI.Parse<int>(ini["Music"]["Title"], TitleMusic);
            PPAMusic = INI.Parse<int>(ini["Music"]["PPA"], PPAMusic);
            PPCMusic = INI.Parse<int>(ini["Music"]["PPC"], PPCMusic);
            PPDMusic = INI.Parse<int>(ini["Music"]["PPD"], PPDMusic);
            CCAMusic = INI.Parse<int>(ini["Music"]["CCA"], CCAMusic);
            CCCMusic = INI.Parse<int>(ini["Music"]["CCC"], CCCMusic);
            CCDMusic = INI.Parse<int>(ini["Music"]["CCD"], CCDMusic);
            TTAMusic = INI.Parse<int>(ini["Music"]["TTA"], TTAMusic);
            TTCMusic = INI.Parse<int>(ini["Music"]["TTC"], TTCMusic);
            TTDMusic = INI.Parse<int>(ini["Music"]["TTD"], TTDMusic);
            QQAMusic = INI.Parse<int>(ini["Music"]["QQA"], QQAMusic);
            QQCMusic = INI.Parse<int>(ini["Music"]["QQC"], QQCMusic);
            QQDMusic = INI.Parse<int>(ini["Music"]["QQD"], QQDMusic);
            WWAMusic = INI.Parse<int>(ini["Music"]["WWA"], WWAMusic);
            WWCMusic = INI.Parse<int>(ini["Music"]["WWC"], WWCMusic);
            WWDMusic = INI.Parse<int>(ini["Music"]["WWD"], WWDMusic);
            SSAMusic = INI.Parse<int>(ini["Music"]["SSA"], SSAMusic);
            SSCMusic = INI.Parse<int>(ini["Music"]["SSC"], SSCMusic);
            SSDMusic = INI.Parse<int>(ini["Music"]["SSD"], SSDMusic);
            MMAMusic = INI.Parse<int>(ini["Music"]["MMA"], MMAMusic);
            MMCMusic = INI.Parse<int>(ini["Music"]["MMC"], MMCMusic);
            MMDMusic = INI.Parse<int>(ini["Music"]["MMD"], MMDMusic);
            SpecialMusic = INI.Parse<int>(ini["Music"]["Special"], SpecialMusic);
            BossMusic = INI.Parse<int>(ini["Music"]["Boss"], BossMusic);
            FinalFeverMusic = INI.Parse<int>(ini["Music"]["FinalFever"], FinalFeverMusic);
            InvincibleMusic = INI.Parse<int>(ini["Music"]["Invincible"], InvincibleMusic);
            SpeedUpMusic = INI.Parse<int>(ini["Music"]["SpeedUp"], SpeedUpMusic);
            ZoneClearMusic = INI.Parse<int>(ini["Music"]["ZoneClear"], ZoneClearMusic);
            GameOverMusic = INI.Parse<int>(ini["Music"]["GameOver"], GameOverMusic);
            LittlePlanetMusic = INI.Parse<int>(ini["Music"]["LittlePlanet"], LittlePlanetMusic);
        }
        else
        {
            // your mod isn't present in the active mods list or has duplicates, so you did something wrong.
        }

        IsConfigInitialised = true;
    }

    // All settings use these options: 0 (Default) = Let OST option decide, 1 = JP, 2 = US

    // Title Screen
    if (TitleMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/TitleScreen.ogg", "DA26_TitleScreen_J");
    }
    else if (TitleMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/TitleScreen.ogg", "DA26_TitleScreen_E");
    }

    // Palmtree Panic
    if (PPAMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R1A.ogg", "DA03_R1A_J");
    }
    else if (PPAMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R1A.ogg", "DA03_R1A_E");
    }

    // Palmtree Panic "G" Mix
    if (PPCMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R1C.ogg", "DA04_R1C_J");
    }
    else if (PPCMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R1C.ogg", "DA04_R1C_E");
    }

    // Palmtree Panic "B" Mix
    if (PPDMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R1D.ogg", "DA05_R1D_J");
    }
    else if (PPDMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R1D.ogg", "DA05_R1D_E");
    }

    // Collision Chaos
    if (CCAMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R3A.ogg", "DA06_R3A_J");
    }
    else if (CCAMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R3A.ogg", "DA06_R3A_E");
    }

    // Collision Chaos "G" Mix
    if (CCCMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R3C.ogg", "DA07_R3C_J");
    }
    else if (CCCMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R3C.ogg", "DA07_R3C_E");
    }

    // Collision Chaos "B" Mix
    if (CCDMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R3D.ogg", "DA08_R3D_J");
    }
    else if (CCDMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R3D.ogg", "DA08_R3D_E");
    }

    // Tidal Tempest
    if (TTAMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R4A.ogg", "DA09_R4A_J");
    }
    else if (TTAMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R4A.ogg", "DA09_R4A_E");
    }

    // Tidal Tempest "G" Mix
    if (TTCMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R4C.ogg", "DA10_R4C_J");
    }
    else if (TTCMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R4C.ogg", "DA10_R4C_E");
    }

    // Tidal Tempest "B" Mix
    if (TTDMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R4D.ogg", "DA11_R4D_J");
    }
    else if (TTDMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R4D.ogg", "DA11_R4D_E");
    }

    // Quartz Quadrant
    if (QQAMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R5A.ogg", "DA12_R5A_J");
    }
    else if (QQAMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R5A.ogg", "DA12_R5A_E");
    }

    // Quartz Quadrant "G" Mix
    if (QQCMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R5C.ogg", "DA13_R5C_J");
    }
    else if (QQCMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R5C.ogg", "DA13_R5C_E");
    }

    // Quartz Quadrant "B" Mix
    if (QQDMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R5D.ogg", "DA14_R5D_J");
    }
    else if (QQDMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R5D.ogg", "DA14_R5D_E");
    }

    // Wacky Workbench
    if (WWAMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R6A.ogg", "DA15_R6A_J");
    }
    else if (WWAMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R6A.ogg", "DA15_R6A_E");
    }

    // Wacky Workbench "G" Mix
    if (WWCMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R6C.ogg", "DA16_R6C_J");
    }
    else if (WWCMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R6C.ogg", "DA16_R6C_E");
    }

    // Wacky Workbench "B" Mix
    if (WWDMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R6D.ogg", "DA17_R6D_J");
    }
    else if (WWDMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R6D.ogg", "DA17_R6D_E");
    }

    // Stardust Speedway
    if (SSAMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R7A.ogg", "DA18_R7A_J");
    }
    else if (SSAMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R7A.ogg", "DA18_R7A_E");
    }

    // Stardust Speedway "G" Mix
    if (SSCMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R7C.ogg", "DA19_R7C_J");
    }
    else if (SSCMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R7C.ogg", "DA19_R7C_E");
    }

    // Stardust Speedway "B" Mix
    if (SSDMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R7D.ogg", "DA20_R7D_J");
    }
    else if (SSDMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R7D.ogg", "DA20_R7D_E");
    }

    // Metallic Madness
    if (MMAMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R8A.ogg", "DA21_R8A_J");
    }
    else if (MMAMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R8A.ogg", "DA21_R8A_E");
    }

    // Metallic Madness "G" Mix
    if (MMCMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R8C.ogg", "DA22_R8C_J");
    }
    else if (MMCMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R8C.ogg", "DA22_R8C_E");
    }

    // Metallic Madness "B" Mix
    if (MMDMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/R8D.ogg", "DA23_R8D_J");
    }
    else if (MMDMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/R8D.ogg", "DA23_R8D_E");
    }

    // Special Stage
    if (SpecialMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/SpecialStage.ogg", "DA32_SpecialStage_J");
    }
    else if (SpecialMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/SpecialStage.ogg", "DA32_SpecialStage_E");
    }

    // Boss!!
    if (BossMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/Boss.ogg", "DA24_Boss_J");
    }
    else if (BossMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/Boss.ogg", "DA24_Boss_E");
    }

    // Final Fever
    if (FinalFeverMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/FinalBoss.ogg", "DA25_FinalBoss_J");
    }
    else if (FinalFeverMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/FinalBoss.ogg", "DA25_FinalBoss_E");
    }

    // Invincible!!
    if (InvincibleMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/Invincibility.ogg", "DA30_Invincibility_J");
    }
    else if (InvincibleMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/Invincibility.ogg", "DA30_Invincibility_E");
    }

    // Speed Up!!
    if (SpeedUpMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/SpeedShoes.ogg", "DA29_SpeedShoes_J");
    }
    else if (SpeedUpMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/SpeedShoes.ogg", "DA29_SpeedShoes_E");
    }

    // Zone Clear
    if (ZoneClearMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/ZoneComplete.ogg", "DA28_ZoneComplete_J");
    }
    else if (ZoneClearMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/ZoneComplete.ogg", "DA28_ZoneComplete_E");
    }

    // Game Over
    if (GameOverMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/GameOver.ogg", "DA31_GameOver_J");
    }
    else if (GameOverMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/GameOver.ogg", "DA31_GameOver_E");
    }

    // Little Planet
    if (LittlePlanetMusic == 1)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "US/DAGarden.ogg", "DA33_DAGarden_J");
    }
    else if (LittlePlanetMusic == 2)
    {
        AudioRedirection.AddMusicReplacement(RSDK.Game.SonicCD, "JP/DAGarden.ogg", "DA33_DAGarden_E");
    }
}