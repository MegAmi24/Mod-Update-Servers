Code "Unhardcoded Mission/Boss Rush HUD Edits" by "MegAmi"
//
    #lib "Memory"
    #lib "RSDK"

    static bool SigScansInitialised = false;

    static long ScoreText = 0;
    static long ScoreNumber = 0;
    static bool isMissionBoss = false;
//
{
    if (SigScansInitialised == false)
    {
        /* 2.0.1: 0x1401CE9E0 */
        ScoreText = ScanSignature("\xFF\x90\xE8\x02\x00\x00\x8B\x45\xFF", "xxxxxxxxx");
        /* 2.0.1: 0x1401CEA19 */
        ScoreNumber = ScanSignature("\xE8\x52\xF7\xF3\xFF\x8B\x83\x8C\x01\x00\x00", "xxxxxxxxxxx");

        Memory.Preserve(ScoreText, 6, true);
        Memory.Preserve(ScoreNumber, 5, true);

        SigScansInitialised = true;
    }

    // Show the S3&K HUD in Mission Mode
	/* 2.0.2: 0x1401CE769 */
    WriteNop(ScanSignature("\x48\x81\xC4\x88\x00\x00\x00\x5B\x5D\xC3\x48\x8B\x05\xCC\xCC\xCA\x02", "xxxxxxxxxxxxx??xx"), 10);

    // Show the S3&K HUD in Boss Rush
	/* 2.0.1: 0x1401CE7D7 */
    WriteNop(ScanSignature("\xE9\xE5\x09\x00\x00\x41\x83\x38\x03", "xxxxxxxxx"), 5);

    if (RSDK.GetRSDKGlobalsAbsPtr() != 0)
    {
        // Check if game.playMode is set to BOOT_PLAYMODE_BOSSRUSH or BOOT_PLAYMODE_MISSION
        byte gameMode = *(byte*)(RSDK.GetRSDKGlobalsAbsPtr() + 0x10C)
        isMissionBoss = (gameMode == 2 || gameMode == 4)

        fixed (bool* pIsMissionBoss = &isMissionBoss)
        {
            WriteAsmHook
            (
                $@"
                    push rdi

                    mov rdi, {(long)pIsMissionBoss}
                    cmp byte ptr [rdi], 1 ; Is this Mission Mode or Boss Rush?
                    jnz exit
                    mov rdi, [rbp + 0x83] ; Get the Time y position
                    sub rdi, 0x100000 ; Move it up by 16 pixels
                    mov [rbp + 0x83], rdi ; Set the position

                exit:
                    pop rdi
                ",

                /* 2.0.1: 0x1401CE7F8 */
                ScanSignature
                (
                    "\x8B\x43\x7C\x89\x85\x83\x00\x00\x00",
                    "xxxxxxxxx"
                ),

                HookBehavior.Before
            );

            WriteAsmHook
            (
                $@"
                    push rdi

                    mov rdi, {(long)pIsMissionBoss}
                    cmp byte ptr [rdi], 1 ; Is this Mission Mode or Boss Rush?
                    jnz exit
                    mov rdi, [rbp - 5] ; Get the Rings y position
                    sub rdi, 0x100000 ; Move it up by 16 pixels
                    mov [rbp - 5], rdi ; Set the position

                exit:
                    pop rdi
                ",

                /* 2.0.1: 0x1401CE80A */
                ScanSignature
                (
                    "\x8B\x83\x84\x00\x00\x00\x89\x45\xFB",
                    "xxxxxxxxx"
                ),

                HookBehavior.Before
            );
        }

        if (isMissionBoss)
        {
            // Don't draw the score
            WriteNop(ScoreText, 6);
            WriteNop(ScoreNumber, 5);
        }
        else
        {
            // Revert above
            Memory.Restore(ScoreText);
            Memory.Restore(ScoreNumber);
        }
    }
}